[tox]
minversion = 4.0
envlist =
    py3{9,10,11,12}
    py3{9,12}-sqlalchemy1
    py312-noflaskbabel  # only tested against latest of all configurations, sans flask-babel
    py39-min
    style
    typing
    docs
skip_missing_interpreters = true

[testenv]
package = wheel
wheel_build_env = .pkg
extras = all
constrain_package_deps = true
use_frozen_constraints = true
# TODO: Remove SQLALCHEMY_SILENCE_UBER_WARNING when Flask-Admin is compatible with SQLAlchemy>=2.0.0
setenv =
    SQLALCHEMY_SILENCE_UBER_WARNING = 1
    AZURE_STORAGE_CONNECTION_STRING = DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;
deps =
    sqlalchemy1: sqlalchemy<2
    -r requirements/tests.txt
commands_pre =
    noflaskbabel: pip uninstall -y flask-babel
commands =
    pip freeze
    pytest -v --tb=short --basetemp={envtmpdir} flask_admin/tests {posargs}

[testenv:py39-min]
deps = -r requirements-skip/tests-min.txt
commands =
    pip freeze
    pytest -v --tb=short --basetemp={envtmpdir} flask_admin/tests -W 'default::DeprecationWarning' {posargs}

[testenv:style]
deps = pre-commit
skip_install = true
commands = pre-commit run --all-files

[testenv:typing]
deps = -r requirements/typing.txt
commands =
    mypy --python-version 3.9
    mypy --python-version 3.12

[testenv:docs]
deps = -r requirements/docs.txt
# commands = sphinx-build -E -W -b dirhtml doc doc/_build/dirhtml
# TODO: Switch to the above command when docs have been migrated to use the Pallets theme.
commands = sphinx-build -b html -d build/doctrees doc build/html

[testenv:update-pre_commit]
labels = update
deps = pre-commit
skip_install = true
commands = pre-commit autoupdate -j4

[testenv:update-requirements]
labels = update
deps = pip-tools
skip_install = true
change_dir = requirements
commands =
    pip-compile build.in -q {posargs:-U}
    pip-compile docs.in -q {posargs:-U}
    pip-compile tests.in -q {posargs:-U}
    pip-compile typing.in -q {posargs:-U}
    pip-compile dev.in -q {posargs:-U}

[testenv:update-requirements_skip]
labels = update
deps = pip-tools
skip_install = true
change_dir = requirements-skip
commands =
    pip-compile tests-min.in -q {posargs:-U}
